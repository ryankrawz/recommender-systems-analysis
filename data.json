{
    "products": [
        {
            "id": "stitchfix",
            "name": "Stitch Fix",
            "shortlogo": "assets/product/stitchfixshortlogo.png",
            "longlogo": "assets/product/stitchfixlonglogo.png",
            "primarycolor": "#04a49c",
            "secondarycolor": "#1c88a0",
            "shortdesc": "An online styling service that applies recommendation algorithms and data science to provide customers with good matches for their personal wardrobe based on size, budget, and style.",
            "sections": [
                {
                    "title": "Description & Main Features",
                    "image": "assets/product/stitchfixvote.png",
                    "text": "When an individual first opens a Stitch Fix account, the application administers a suite of assessments in an attempt to quantify certain aspects of their preferences. The assessments will ask the user for input ranging from how tightly they like their pant legs to their favorite colors and patterns to which types of clothing they would and would not wear. An example of the interface is below. Once the assessments are completed, Stitch Fix will then provide a user’s personal clothing metrics to the stylist they’re assigned. Next, the stylist hand picks a Fix, or a box of five articles of clothing, to ship to the user. Upon receival, the user can select which pieces they want to keep and which they want to return. Most customers elect to receive a Fix every two months. Users who have already ordered Fixes are also allowed to shop for clothes directly on the website, and Stitch Fix’s recommender system continues to help them in this regard. Based on what the user previously ordered, Stitch Fix will recommend pairings to include in a user’s outfit, as shown below."
                },
                {
                    "title": "Goals",
                    "image": "assets/product/stitchfixpeople.jpg",
                    "text": "The primary objective of Stitch Fix is for customers to keep every single item of clothing they are sent. In other words, Stitch Fix hopes to implement their recommender system so successfully that the selected clothing will exactly match the customer in their sizes, spending habits, and fashion tastes. In doing so, Stitch Fix can encourage users to rely strictly on its website to shop for clothes or have clothes provided for them. The tasks required in order for Stitch Fix to accomplish its goal can be broken down into two major stages. First, Stitch Fix must overcome the largest obstacle for nearly all machine learning pipelines: feature engineering. Essentially, Stitch Fix has to determine the quantitative measurement of a customer’s clothing profile by interpreting their reactions to the clothes they view. Say that during their assessment, a customer is presented with a red sweater, and the customer votes that they would indeed wear it. Based on the aspects of that sweater, what metrics in the user’s profile should be adjusted? Should there be a “color” metric that now leans more towards red? Should there be a “buttons” metric indicating that the customer prefers clothing without buttons? What about the rest of the outfit? Would the customer only wear that sweater with some outfits and not others? As the desired accuracy of Stitch Fix’s recommender system increases, the complexity of the required feature engineering behind the system expands at an exponential rate. Second, once Stitch Fix has a working model for a user’s profile, they must apply this model to the clothing selection process. It must be determined how the available inventory is to be ranked in terms of a customer’s preferences. For ranking to occur, Stitch Fix will need to calculate the probability of a customer wearing a certain clothing item, which involves negotiating that item’s features with the given customer profile. Then comes the human stylist. When all is said and done, it’s the stylist who curates the Fix for a customer. Stitch Fix must decide how information on rankings, probabilities, profiles, etc. is presented to the stylist and to what degree of freedom the stylist can select clothing that may conflict with the recommendation algorithm’s picks."
                },
                {
                    "title": "Strengths",
                    "image": "assets/product/stitchfixnav.png",
                    "text": "Stitch Fix should be applauded for its automation strategies, which have led the company to make leaps and bounds in operational efficiency. The clear example of automation is seen in the clothing recommender system, where a human stylist need not intervene until the very last step of the process before the Fix is shipped. However, a more nontrivial example lies in Stitch Fix’s warehouse assignment system. The possible delivery costs and speeds from each warehouse to the customer are constructed in a matrix, and then the system performs binary optimization to choose the best warehouse to ship from, saving money for the company and time for the customer. In addition, Stitch Fix boasts an incredibly attractive user experience. The company website makes the job for the user very simple. All the user has to do is peruse a stream of suggesting clothing, and click a “thumbs up” or “thumbs down” icon (as seen previously) depending on their reaction to the item. The website is also easily traversable. It takes one click for the user to navigate to their Fix management, shopping, past orders and feedback, cart, or profile. Below is the Stitch Fix home screen. The chosen styling for the website is decluttered, straightforward, and aesthetically pleasing."
                },
                {
                    "title": "Weaknesses",
                    "image": "assets/product/stitchfeatureengineering.png",
                    "text": "An obvious weakness for Stitch Fix is the presence of the human element involved in creating a customer’s Fix. The stylists employed by Stitch Fix represent more salary and benefit-related liability on the company balance sheet, and introduce a certain degree of bias to clothing selection since people lack the ability to make fully objective decisions. As a further note, the stylist is a pain point for both Stitch Fix and its customers. If a customer receives a poorly curated Fix, most of their frustration will be directed towards the stylist, and the company may be tempted to think the problem lies in the stylist and fail to continue developing the recommender system itself. One consideration for Stitch Fix is to apply natural language processing to user feedback in order to adjust a user’s profile as they rate the clothes they receive. Another, more implicit weakness for Stitch Fix will be harder to solve. On a fundamental level, Stitch Fix is attempting to create a feature engineering model for fashion itself. However, the concept of fashion is amorphous, and the tastes of the public are endlessly evolving, even to the point where some customers may not wear a single item from a Fix they received a few months ago. The machine learning process is difficult enough in fields like facial recognition, where researchers enjoy the luxury of the human facial structure taking hundreds of thousands, if not millions, of years to change. Unfortunately, the same cannot be said for the task of reliably measuring and quantifying something as subjective and ill-defined as fashion."
                },
                {
                    "title": "Conclusion",
                    "image": "assets/product/stitchfixcomplete.png",
                    "text": "Relative to other recommender systems like Spotify, Netflix, and Instagram, Stitch Fix has an advantage in the degree to which it can stylize its recommendations based on direct user input. Instead of simply recording that a user did or did not watch a show or listen to a song, Stitch Fix’s interface accepts specific data as to whether or not the user needed a different size, preferred a different color, was looking for a lower price, etc. This rich variety of data is much more useful for their machine learning pipeline and allows Stitch Fix to quickly adapt to a user’s tastes and preferences. On the downside, Stitch Fix faces the same challenges that almost all recommender systems face: identifying and cleaning features. Like the way Spotify must determine the factors that contributed to a user liking or disliking a song, Stitch Fix must develop a quantitative representation of a user’s reaction to clothing they receive. In order to strengthen its product, Stitch Fix will need to find the optimal balance between choosing too few features to inform its recommendations and, in machine learning terms, taking the kitchen sink."
                }
            ]
        },
        {
            "id": "spotify",
            "name": "Spotify",
            "shortlogo": "assets/product/spotifyshortlogo.png",
            "longlogo": "assets/product/spotifylonglogo.png",
            "primarycolor": "#1cd464",
            "secondarycolor": "#a6f1c1",
            "shortdesc": "Spotify is an industry leading music streaming platform.",
            "sections": [
                {
                    "title": "Description & Main Features",
                    "image": "assets/product/spotifyad.png",
                    "text": "Spotify is a massive music streaming service where users subscribe to an account and are able to listen to music on demand. It has a library of 50 million songs and is constantly aggregating more. Users are able to save songs to their personal library as well as create a playlist of specific songs. In addition users are able to download a playlist so as to listen without internet connection, under some subscriptions. Spotify also facilitates the discovery of new music for its users and has implemented 3 key methods for recommending new songs. The first is known as a filtered approach. This approach is arguably the most straight forward. It looks at playlists created by a user, then looks at similar playlists from other users. From this it will then identify songs which exist in both. Then it will identify songs which may exist in one but not another. After a series of matrix manipulations and mathematics it will produce songs which might be similar to those in the playlist, hence songs the user might enjoy. A second approach they implement utilizes Natural Language Processing. Here spotify scrapes the web for information about songs; this can be reviews, comments, blog posts etc. It is from this information that it then develops a profile of the song itself. This profile is then used to predict songs of a similar profile, much like the filtering approach. The third utilizes convolutional neural networks, CNN. This approach is unique in that it actually analyzes the song itself. Here the songs are converted to waveform and then processed as a stream of bytes. The CNN identifies numerous parameters of the song, including its BPM, key, tempo and the like. From this it can then identify songs which may possess similar qualities and then recommend them. "
                },
                {
                    "title": "Goals",
                    "image": "**IMAGE HERE**",
                    "text": "The goal is rather straightforward, that being to recommend new music to listeners. People always want to hear new songs that they like. Listening to the same songs, while enjoyable, can become stale. In light of this, Spotify wants to be constantly introducing its listeners to new songs so that they never feel stale. This will then persuade them to continue using the service and hence allow spotify to turn a profit. "
                },
                {
                    "title": "Strengths",
                    "image": "**IMAGE HERE**",
                    "text": "The greatest strength is in their utilization of multiple models. This is a very clever idea as it ensures that the company can continue to innovate. Models can have a tendency to fail or otherwise not work, in utilizing 3 distinct models, spotify can ensure that they will be operating effectively and recommend. These models also all utilize different sources of information. As we are still in the early days of some of these models potential, this serves as an information source in determining the strengths and weaknesses of each approach. For instance, it is possible that only the CNN approach is necessary for recommending a new song. Today that is not the case. We see the other models work to great success. Spotify continues to be an industry leader and has seen great success in its recommendation software. Today it sees a 35% market share representing the single largest share of any music streaming service. "
                },
                {
                    "title": "Weaknesses",
                    "image": "**IMAGE HERE**",
                    "text": "In practice these models have performed very well, but that is not to say they go without weaknesses. The largest is rooted in the nature of ML in general. It all starts with the data and the data they are after is not easily accessible nor is it clean. This presents an enormous challenge as the company is required to spend additional energy and funds towards cleaning and optimizing the data so that it can be utilized. For a small company this would be largely impossible to accomplish but on account of the fact that Spotify holds such a large market share, they can manage. "
                },
                {
                    "title": "Conclusion",
                    "image": "**IMAGE HERE**",
                    "text": "Compared to the other products’ implementations of ML spotify appears to be at an advantage in some respects as well as a disadvantage. Its most obvious strength is in that it utilizes multiple models to achieve the same goal. This mitigates the inherent limitations of each approach as well as optimizes the benefits. It also has an advantage in that it utilizes data from both the users as well as outside sources, namely twitter or other textual reviews. This allows it to draw connections which may otherwise remain hidden. In doing so this will uncover an underlying area of consistency which would communicate a very strong indication of being accurate. It falls short of the other products in that perhaps it is overkill. Meaning that while the other approaches are much more simple and not quite as accurate, they are more bang for your buck. Netflix seems to be rather successful at recommending new programs based solely off of the users watch history. Such a simple model is both easier to maintain and implement. "
                }
            ]
        },
        {
            "id": "netflix",
            "name": "Netflix",
            "shortlogo": "assets/product/netflixshortlogo.png",
            "longlogo": "assets/product/netflixlonglogo.png",
            "primarycolor": "#b21c23",
            "secondarycolor": "#ec4447",
            "shortdesc": "Streaming juggernaut Netflix may surprise you in how it approaches user retention.",
            "sections": [
                {
                    "title": "Description & Main Features",
                    "image": "/assets/product/netflixshortlogo.png",
                    "text": "Netflix is really two things: a catalog of titles and a recommendation system. Without titles to watch, no one would purchase the service. Without a recommendation system, users may purchase the service but they would be left on their own to navigate hundreds to thousands of titles. With that many options, users would likely either give up or find something they don’t like before finding something new to watch; they’d be unsubscribed by the next month. So what goes into making a recommendation system that keeps users entertained and satisfied? Here are some of the metrics Netflix uses: how you interact with the service; what other members with similar tastes like; details on the title being recommended (genre, release year, cast, etc); what time of the day you watch; the devices you are watching Netflix on; and how long you watch. "
                },
                {
                    "title": "Goals",
                    "image": "/assets/product/netflixextra.jpeg",
                    "text": "My first instinct is that the goal of this system is to maximize the time spent by the user on the platform. But is that really true? Netflix’s main source of revenue is not ads: it’s subscriptions. That means that Netflix needs to make its users feel that the money they put down was worth it. Given that income is stable, if the user has a negative experience, they will unsubscribe; if the user has a positive experience, they will stay subscribed. Netflix’s goal is not to keep you on the platform: it’s to make you feel that the platform is worth it. Netflix achieves that by presenting its users with a massive library (5,000 titles if you are in the US, and 13,612 worldwide) and then picking out the titles they are most likely to enjoy. With a large enough library and enough data, the algorithm is bound to find something you like, right? "
                },
                {
                    "title": "Strengths",
                    "image": "assets/product/netflixhome.jpeg",
                    "text": "New users will instantly have access to Netflix’s massive library, but the algorithm won’t know what to recommend. To solve this, Netflix “jump starts” the recommendation process by asking its new user what titles they enjoy. The algorithm then recommends from that pool, but these early data points are later superseded by the user’s expanding viewing history. This covers a blind spot in the algorithm without demanding too much of the user’s time. The more Netflix is used, the more personalized it becomes. Rows (“Continue Watching”, “Trending Now”) appear in the order that the algorithm thinks the user will be most interested in from top to bottom. Then titles in the rows are ranked by what the algorithm thinks are closest to the user’s taste. All of this is done to get the user to discover a title they will like. If the algorithm is successful, it justifies the subscription fee for the consumer."
                },
                {
                    "title": "Weaknesses",
                    "image": "/assets/product/netflixpage.jpeg",
                    "text": "Most of the data is collected without input from the user. This is a double-edged sword. On one end, the algorithm is purely reactive to the user’s habits and decisions, leading to a highly streamlined user experience. On the other, the user has little way to influence the algorithm other than watching content. For example, after completing “Great Pretender” , the user is not prompted if they liked the title and how much they liked it. They can give it a thumbs up or thumbs down on their own, but this is not baked into the core loop of Netflix (search, watch, search, etc)."
                },
                {
                    "title": "Conclusion",
                    "image": "/assets/product/netflixlast.jpeg",
                    "text": "Overall, Netflix’s recommendation system has strengths that vastly compensate for its weaknesses. Its “jump start” system covers the blind spot created by a new user; its adaptation over time makes it a product closer in line with what the viewer wants, raising its value to the user and justifying the subscription fee; and its insistence on keeping the user from inputting feedback data prevents users from doing anything that isn’t consuming the media they want (which is WHY they are paying for the service in the first place). Adding an optional rating system seems interesting at first, but consider how much of the user base would know it exists (let alone use it). This insistence on preserving the core loop and understanding what your customer wants is present in products like Stitch Fix, Spotify, and Instagram too. Stitch Fix knows its customers want to keep clothes they are sent, so they have the customer pick clothes they like or dislike, and then gives them clothing options. Spotify gives its users music and it does not make them “rate” how much they like a song; they either “like” it, ignore it, or go out of their way to “dislike” it. Instagram decides what users want based on what they do as well. This seems to be the winning move for modern software. Besides, who wants to fill out another survey about “customer experience”?"
                }
            ]
        },
        {
            "id": "instagram",
            "name": "Instagram",
            "shortlogo": "assets/product/instagramshortlogo.jpg",
            "longlogo": "assets/product/instagramlonglogo.png",
            "primarycolor": "#c40889",
            "secondarycolor": "#f89f20",
            "shortdesc": "A Facebook-owned social networking service with the ability to curate photo and video content that fits users' interests.",
            "sections": [
                {
                    "title": "Description & Main Features",
                    "image": "assets/product/instagramclickpath.png",
                    "text": "Instagram’s Explore recommender system has the powerful ability to cultivate a set of specific photos and videos among hundreds of millions of photo and video options through multiple applications of machine learning techniques. In particular, it integrates specially-made query languages into an AI framework that makes almost 100 million photo and video content predictions per second. In order to pinpoint effective content-generation algorithms that perform with optimal memory usage, Instagram’s engineering team developed a Python library known as IGQL, a library that proves beneficial to the team due to its user-friendly and highly-reusable code. IGQL is specifically designed for interaction with Instagram’s Explore recommender system to obtain potential photo and video options based on a user’s recently-viewed content. Instagram’s engineering team has also integrated a filter that obtains photos and videos that are not only similar to one another, but also come from similarly-themed accounts. If a user interacts with a post from a dog-centered account, similar content is pulled from other accounts of that type. That’s why users are more likely to see pictures of dogs from exclusively dog-centered accounts rather than, say, from the accounts of two unrelated users who have both recently shared dog content. The engineering team makes use of the Facebook AI Similarity Search (FAISS) engine for such purposes."
                },
                {
                    "title": "Goals",
                    "image": "assets/product/instagramsearch.png",
                    "text": "So, what are the specific steps that Instagram’s engineering team takes to fulfill its goal of generating specially-curated content on a user’s Explore page? Instagram utilizes a candidate ranking system to do so. Specifically, the team’s machine learning algorithm works with a couple hundred randomly-selected, but related, photo and video options and decides which of these are most suitable for the user’s Explore page. First, Instagram’s machine learning algorithm tracks the public photos and videos viewed by the user in the past, and the accounts responsible for these photos and videos are referred to as the “seed” accounts. These photos and videos are only a very small subset of all of the photo and video content publicly available on Instagram that pertains to the user’s determined areas of interest. While the “seed” accounts might not be optimal if the user is new to Instagram, later “seed” accounts will become more useful for the generation of related content. This is because the accounts of the content that the user views on the Explore page will later become the “seed” accounts responsible for the next set of content generated on the page. Next, the algorithm uses a technique that identifies other accounts that share similarities with the “seed” accounts. As a result, the photo and video content from these external accounts is obtained, and among this content, 500 photo and video candidates are randomly sampled and put up for consideration for inclusion on the user’s Explore page. Similar to the case of the “seed” accounts, subsequent sets of 500 candidates will consist of content even more specific to the user’s interests. Given these photo and video candidates, the algorithm’s final step is to carry out a ranking process consisting of three phases. In the first phase, the algorithm selects the 150 most highly-related and high-quality of the original 500 photo and video candidates. The second phase further filters the photo and video candidates by making use of a neural network model that reduces the candidate pool to 50 photos and videos. In the third and final phase, more sophisticated deep learning techniques are used to select the 25 highest-related and best quality photos and videos among the remaining 50 candidates."
                },
                {
                    "title": "Strengths",
                    "image": "**IMAGE HERE**",
                    "text": "No other social media recommender system curates user-specific content as well as that integrated with Instagram’s Explore feature. With its integration of an automated ranking-based machine learning algorithm for its Explore page, Instagram is the ultimate social media app for drawing users together from all over the world. Thanks to the advanced functionality of Instagram’s Explore recommender system, the content a user desires is just a few clicks away. As users’ interests change, so will their Explore pages--so long as users actually demonstrate interest in new topics by interacting with them. In fact, interacting with the photo and video content generated by Instagram’s Explore page can be thought of as searching for images through a modern web browser, with the added bonus of being able to do so in a social environment "
                },
                {
                    "title": "Weaknesses",
                    "image": "**IMAGE HERE**",
                    "text": "Despite all of its benefits, Instagram’s Explore recommender system can get a bit too specific. What if, for example, a user interacts with a couple dog photos without any real interest, and no other types of photos? Then the user’s newly-curated Explore page might now be infested with dog photos. What if, as another example, the user doesn’t focus on a specific topic while interacting with photo and video content? Then the user’s Explore page might now not be curated to his or her actual interests. Indeed, Instagram’s Explore recommender system is a double-edged sword."
                },
                {
                    "title": "Conclusion",
                    "image": "**IMAGE HERE**",
                    "text": "In comparison to the features of other recommender systems such as those of Stitch Fix, Spotify, and Netflix, Instagram’s Explore recommender system shines as a result of its incredibly fast, user-focused content curation. Additionally, as opposed to what is reflected by Netflix’s row-based ranking system, usage of Instagram’s Explore feature involves frequent user feedback, allowing the recommender system to quickly decide which content is relevant to the user’s interests. Instagram’s high recommendation speed is on par with that of Spotify and Stitch Fix because music entries, and especially information pertaining to clothing items, do not take much time to interact with. Specifically, the rapid content curation facilitated by Instagram’s Explore recommender system is due in large part to the frequent user input it receives--access to a photo or video is only a tap away, meaning that numerous photos and videos will be accessed by the user in a relatively short time frame. Unlike Spotify and Netflix, however, Instagram does not initially ask the user about his or her topics of interest. As a result, new Instagram users will likely be exposed to a large amount of content that does not fit their interests, but this can be quickly overcome once the user begins to engage with his or her interests. This disadvantage is similar to that demonstrated by Stitch Fix’s recommender system, which relies on the user’s reactions to various clothes in order to adjust the user’s clothing profile accordingly."
                }
            ]
        }
    ]
}
